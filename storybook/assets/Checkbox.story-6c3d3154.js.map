{"version":3,"file":"Checkbox.story-6c3d3154.js","sources":["../../src/forms/Checkbox/index.tsx"],"sourcesContent":["import React, {\n  useMemo, InputHTMLAttributes, forwardRef, useRef, useImperativeHandle,\n} from 'react';\nimport { transparentize } from 'polished';\nimport styled from 'styled-components';\n\nimport useIsomorphicLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {\n  children?: any;\n  checked?: boolean;\n  indeterminate?: boolean;\n}\n\nfunction Approved() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n    >\n      <path d=\"M11.5 18.5l-3.9-4L6 16l5.6 5.6 11.6-11.5-1.7-1.6z\" fill=\"currentColor\" />\n    </svg>\n  );\n}\n\nfunction Indeterminate() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n    >\n      <rect width=\"20\" height=\"4\" y=\"13\" x=\"4.5\" fill=\"currentColor\" stroke=\"none\" rx=\"2\" />\n    </svg>\n  );\n}\n\nconst Checkbox = forwardRef<HTMLInputElement| null, Props>(\n  ({ className, children, indeterminate, ...rest }, ref) => {\n    const innerRef = useRef<HTMLInputElement>(null);\n    const id = `checkbox_${rest.name}_${rest.value ?? 'none'}`;\n    const innerClass = useMemo(() => {\n      const arr = [];\n      if (rest.checked || indeterminate) arr.push('checked');\n      if (rest.disabled) arr.push('disabled');\n      return arr.join(' ');\n    }, [rest.checked, rest.disabled, indeterminate]);\n\n    // @ts-ignore\n    useImperativeHandle(ref, () => innerRef.current);\n\n    useIsomorphicLayoutEffect(() => {\n      if (innerRef.current) {\n        // @ts-ignore\n        innerRef.current.indeterminate = indeterminate;\n      }\n    }, [indeterminate]);\n\n    return (\n      <Wrapper className={className}>\n        <input type=\"checkbox\" id={id} {...rest} ref={innerRef} />\n        <label htmlFor={id}>\n          <Shape className={innerClass}>\n            {indeterminate ? <Indeterminate /> : <Approved />}\n          </Shape>\n          {children}\n        </label>\n      </Wrapper>\n    );\n  },\n);\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n\nconst Shape = styled.div`\n  display: inline-flex;\n  margin: 0.5rem;\n  width: 1.25em;\n  height: 1.25em;\n  background: transparent;\n  border: 0.1em solid ${({ theme }) => theme.border};\n  border-radius: ${({ theme }) => theme.radius};\n  justify-content: center;\n  align-items: center;\n\n  will-change: background-color;\n  transition: background-color 150ms ease-out;\n\n  svg {\n    opacity: 0;\n    stroke-width: 0.1em;\n    stroke: currentColor;\n  }\n\n  &.checked {\n    border-color: ${({ theme }) => theme.primary};\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.white};\n    svg {\n      opacity: 1;\n    }\n\n    &.disabled {\n      color: ${({ theme }) => transparentize(0.15, theme.textDark)};\n    }\n  }\n\n  &.disabled {\n    background: ${({ theme }) => transparentize(0.55, theme.border)};\n    border-color: ${({ theme }) => theme.border};\n  }\n`;\n\nconst Wrapper = styled.span`\n  display: block;\n  position: relative;\n  width: auto;\n\n  label {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    padding-left: 0.625em;\n    max-width: 100%;\n    width: 100%;\n    line-height: 1.25;\n    margin-right: 0.625rem;\n  }\n\n  input {\n    display: none;\n    &:disabled + label {\n      color: ${({ theme }) => transparentize(0.25, theme.textDark)};\n    }\n  }\n`;\n"],"names":["Approved","jsx","Indeterminate","Checkbox","forwardRef","className","children","indeterminate","ref","innerRef","useRef","id","rest","innerClass","useMemo","arr","useImperativeHandle","useIsomorphicLayoutEffect","jsxs","Wrapper","Shape","Checkbox$1","styled","theme","transparentize"],"mappings":"gVAcA,SAAAA,GAAA,CACE,OAAAC,EAAA,IAAA,MAAA,CAAA,MAAA,6BAAA,MAAA,KAAA,OAAA,KAAA,QAAA,YAAA,SAAAA,EAAAA,IAAA,OAAA,CAAA,EAAA,oDAAA,KAAA,eAAA,CAAA,CAAA,CAUF,CAEA,SAAAC,GAAA,CACE,OAAAD,EAAAA,IAAA,MAAA,CAAA,MAAA,6BAAA,MAAA,KAAA,OAAA,KAAA,QAAA,YAAA,SAAAA,EAAA,IAAA,OAAA,CAAA,MAAA,KAAA,OAAA,IAAA,EAAA,KAAA,EAAA,MAAA,KAAA,eAAA,OAAA,OAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAUF,CAEA,MAAAE,EAAAC,EAAA,WAAA,CAAA,CACG,UAAAC,EAAEA,SAAAA,EAAWC,cAAAA,EAAUC,GAAAA,CAAuB,EAAAC,IAAA,CAC7C,MAAAC,EAAAC,SAAA,IAAA,EACAC,EAAA,YAAAC,EAAA,IAAA,IAAAA,EAAA,OAAA,MAAA,GACAC,EAAAC,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,CAAA,EACA,OAAAH,EAAA,SAAAL,IAAmCQ,EAAAA,KAAAA,SAAAA,EACnCH,EAAA,UAAmBG,EAAAA,KAAAA,UAAAA,EACnBA,EAAA,KAAA,GAAA,CAAmB,EAAA,CAAAH,EAAA,QAAAA,EAAA,SAAAL,CAAA,CAAA,EAIrBS,OAAAA,EAAAA,oBAAAA,EAAAA,IAAAA,EAAAA,OAAAA,EAEAC,EAAAA,IAAAA,CACER,EAAA,UAEEA,EAAAA,QAAAA,cAAAA,EACF,EAAA,CAAAF,CAAA,CAAA,EAGFW,OAAAC,EAAA,CAAA,UAAAd,EAAA,SAAA,CAEIJ,MAAA,QAAA,CAAA,KAAA,WAAA,GAAAU,EAAA,GAAAC,EAAA,IAAAH,EAAA,EAAuDS,EAAAA,KAAA,QAAA,CAAA,QAAAP,EAAA,SAAA,CAErDV,EAAAA,IAAAmB,EAAA,CAAA,UAAAP,EAAA,SAAAN,EAAAN,EAAA,IAAAC,EAAA,CAAA,CAAA,EAAAD,EAAAA,IAAAD,EAAA,CAAA,CAAA,CAAA,CAAA,EAEAM,CACCA,EAAAA,CACH,CAAA,CAAA,CAGN,CAAA,EAGFH,EAAAA,YAAAA,WAEA,MAAAkB,EAAAlB,EAEAiB,EAAAE,EAAA,IAAA,WAAA,CAAwB,YAAA,kBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,0GAAA,kBAAA,mMAAA,qBAAA,UAAA,oCAAA,4BAAA,iBAAA,IAAA,EAAA,CAAA,CAMC,MAAAC,CAAQ,IAAAA,EAAA,OAAA,CAAA,CACb,MAAAA,CAAQ,IAAAA,EAAA,OAAA,CAAA,CAcP,MAAAA,CAAQ,IAAAA,EAAA,QAAA,CAAA,CACJ,MAAAA,CAAQ,IAAAA,EAAA,QAAA,CAAA,CACnB,MAAAA,CAAQ,IAAAA,EAAA,MAAA,CAAA,CAMN,MAAAA,CAAQ,IAAAC,EAAA,IAAAD,EAAA,QAAA,EAAA,CAAA,CAKL,MAAAA,CAAQ,IAAAC,EAAA,IAAAD,EAAA,MAAA,EAAA,CAAA,CACN,MAAAA,CAAQ,IAAAA,EAAA,MAAA,EAI7BJ,EAAAG,EAAA,KAAA,WAAA,CAA2B,YAAA,oBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,sOAAA,KAAA,EAAA,CAAA,CAmBX,MAAAC,CAAQ,IAAAC,EAAA,IAAAD,EAAA,QAAA,CAAA;;;;;;;;;;;;;;;;;"}