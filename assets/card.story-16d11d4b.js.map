{"version":3,"file":"card.story-16d11d4b.js","sources":["../../src/components/Card/index.tsx"],"sourcesContent":["import React, { HTMLAttributes, useMemo } from 'react';\nimport styled from 'styled-components';\nimport Box from '../../elements/Box';\nimport { ColorType } from '../../types';\n\nconst CardBody = styled.div`\n  padding: 1.25rem;\n  margin: 0;\n`;\n\nconst CardHeader = styled.header`\n  display: flex;\n  padding: 0.5rem 1.5rem;\n  min-height: 3.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst CardFooter = styled.footer`\n  display: flex;\n  padding: 0.5rem 1.5rem;\n  min-height: 3.5rem;\n  border-top: 1px solid ${({ theme }) => theme.border};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst CardImage = styled.a`\n  width: 100%;\n\n  img {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    border-top-left-radius: 3px;\n    border-top-right-radius: 3px;\n  }\n`;\n\nconst CardImageHorizontal = styled.a<{ url?: string }>`\n  flex: 0 0 30%;\n  min-width: 5rem;\n  width: 30%;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n\n  background: no-repeat center/cover;\n  ${({ url }) => (url ? { backgroundImage: `url(${url})` } : undefined)}\n`;\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  /** レスポンシブなイメージを追加する */\n  image?: string;\n  /** タイトル */\n  title?: string;\n  /** ヘッダーの右側に追加する */\n  headerOptions?: any;\n  /** header部分（イメージ）を横並びにする */\n  horizontal?: boolean;\n  /** footer */\n  footer?: any;\n  /** 色の指定 */\n  color?: ColorType;\n}\n\nexport default function Card({\n  image, title, children, horizontal, footer, color, style = {}, ...rest\n}: Props) {\n  const header = useMemo(() => {\n    if (image && !horizontal) return (<CardImage><img src={image} alt=\"\" /></CardImage>);\n    if (image && horizontal) return (<CardImageHorizontal url={image} />);\n    if (title && !horizontal) return (<CardHeader><h3>{title}</h3></CardHeader>);\n    return null;\n  }, [image, title, horizontal]);\n\n  const styles: any = useMemo(\n    () => ({ flexDirection: horizontal ? 'row' : 'column', ...style }),\n    [style, horizontal],\n  );\n\n  return (\n    <Box color={color} {...rest} style={styles}>\n      {header}\n      <CardBody>\n        {children}\n      </CardBody>\n      {footer && (<CardFooter>{React.Children.only(footer)}</CardFooter>)}\n    </Box>\n  );\n}\n"],"names":["CardBody","styled","CardHeader","theme","CardFooter","CardImage","CardImageHorizontal","url","Card","image","title","children","horizontal","footer","color","rest","header","useMemo","jsx","styles","style","jsxs","Box","React"],"mappings":"qTAKA,MAAAA,EAAAC,EAAA,IAAA,WAAA,CAA2B,YAAA,iBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,2BAAA,CAAA,EAK3BC,EAAAD,EAAA,OAAA,WAAA,CAAgC,YAAA,mBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,gFAAA,oDAAA,EAAA,CAAA,CAIF,MAAAE,CAAQ,IAAAA,EAAA,MAAA,EAKtCC,EAAAH,EAAA,OAAA,WAAA,CAAgC,YAAA,mBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,6EAAA,oDAAA,EAAA,CAAA,CAIL,MAAAE,CAAQ,IAAAA,EAAA,MAAA,EAKnCE,EAAAJ,EAAA,EAAA,WAAA,CAA0B,YAAA,kBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,uGAAA,CAAA,EAY1BK,EAAAL,EAAA,EAAA,WAAA,CAAoC,YAAA,4BAAA,YAAA,cAAA,CAAA,EAAA,CAAA,oIAAA,EAAA,EAAA,CAAA,CAQ/B,IAAAM,CAAM,IAAAA,EAAA,CAAa,gBAAA,OAAAA,CAAA,GAAiC,EAAA,MAAA,EAkBzD,SAAAC,EAAA,CAA6B,MAAAC,EAC3BA,MAAAA,EAAOC,SAAAA,EAAOC,WAAAA,EAAUC,OAAAA,EAAYC,MAAAA,EAAQC,MAAAA,EAAAA,CAAAA,EAAgB,GAAAC,CACvD,EAAA,CACL,MAAAC,EAAAC,EAAAA,QAAA,IACER,GAAA,CAAAG,EAA0BM,EAAA,IAAAb,EAAA,CAAA,SAAAa,EAAA,IAAA,MAAA,CAAA,IAAAT,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAC1BA,GAAAG,EAAyBM,EAAA,IAAAZ,EAAA,CAAA,IAAAG,CAAA,CAAA,EACzBC,GAAA,CAAAE,EAA0BM,MAAAhB,EAAA,CAAA,SAAAgB,EAAA,IAAA,KAAA,CAAA,SAAAR,EAAA,CAAA,CAAA,EAC1B,KAAO,CAAAD,EAAAC,EAAAE,CAAA,CAAA,EAGTO,EAAAF,EAAAA,QAAA,KAAA,CACS,cAAAL,EAAA,MAAA,SAAsC,GAAAQ,CAAaA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAI5D,OAAAC,EAAA,KAAAC,EAAA,CAAA,MAAAR,EAAA,GAAAC,EAAA,MAAAI,EAAA,SAAA,CAEKH,EAAAA,MAAAA,EAAAA,CAAAA,SAAAA,EAAAA,EAGDH,GAAAK,EAAAA,IAAAd,EAAA,CAAA,SAAAmB,EAAA,SAAA,KAAAV,CAAA,EAAA,CACqD,CAAA,CAAA,CAG3D;;;;;;;;"}