{"data":{"site":{"siteMetadata":{"title":"visits-style","docsLocation":"https://github.com/visits-works/visits-style/tree/develop/docs/content","description":"react style guide for VISITS Technologies"}},"mdx":{"frontmatter":{"title":"Theme","description":"デフォルト色スキーマ"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `プロジェクト事の設定値です。`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `example`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `基本的に内臓されているコンポーネントは以下の設定値として作られているのですが、`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `以下のようにカスタムとして値を使えます。`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `css\\`\n  color: \\${({ theme }) => theme.primary};\n\\`;\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `colors`), React.createElement(Table, {\n      striped: true,\n      bordered: true\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Name\"), React.createElement(\"th\", null, \"Type\"), React.createElement(\"th\", null, \"Default Value\"))), React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"primary\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.primary\n    }), theme.primary)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"link\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.link\n    }), theme.link)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"info\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.info\n    }), theme.info)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"success\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.success\n    }), theme.success)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"warning\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.warning\n    }), theme.warning)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"danger\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.danger\n    }), theme.danger)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"dark\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.dark\n    }), theme.dark)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"light\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.light\n    }), theme.light)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"black\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.black\n    }), theme.black)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"blackBis\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.blackBis\n    }), theme.blackBis)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"blackTer\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.blackTer\n    }), theme.blackTer)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"white\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.white\n    }), theme.white)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"whiteBis\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.whiteBis\n    }), theme.whiteBis)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"whiteTer\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.whiteTer\n    }), theme.whiteTer)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"grey\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.grey\n    }), theme.grey)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"greyLight\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.greyLight\n    }), theme.greyLight)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"greyLighter\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.greyLighter\n    }), theme.greyLighter)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"text\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.text\n    }), theme.text)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"textDark\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.textDark\n    }), theme.textDark)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"textLight\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.textLight\n    }), theme.textLight)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"textStrong\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.textStrong\n    }), theme.textStrong)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"background\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.background\n    }), theme.background)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"border\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.border\n    }), theme.border)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"borderHover\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.borderHover\n    }), theme.borderHover)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"borderActive\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.borderActive\n    }), theme.borderActive)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"placeholder\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"color\")), React.createElement(\"td\", null, React.createElement(Cube, {\n      color: theme.placeholder\n    }), theme.placeholder)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `variables`), React.createElement(Table, {\n      striped: true,\n      bordered: true\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Name\"), React.createElement(\"th\", null, \"Type\"), React.createElement(\"th\", null, \"Default Value\"))), React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"fontFamily\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"font-family\")), React.createElement(\"td\", null, theme.fontFamily)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"fontSize\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"font-size\")), React.createElement(\"td\", null, theme.fontSize)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"responsive\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"boolean\")), React.createElement(\"td\", null, `${theme.responsive}`)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"gutter\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"size\")), React.createElement(\"td\", null, `${theme.gutter}px`)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"smallGutter\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"size\")), React.createElement(\"td\", null, `${theme.smallGutter}px`)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"mobile\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"size\")), React.createElement(\"td\", null, `${theme.mobile}px`)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"tablet\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"size\")), React.createElement(\"td\", null, `${theme.tablet}px`)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"desktop\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"size\")), React.createElement(\"td\", null, `${theme.desktop}px`)), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"fullhd\"), React.createElement(\"td\", null, React.createElement(Tag, null, \"size\")), React.createElement(\"td\", null, `${theme.fullhd}px`)))));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"url":"#example","title":"example"},{"url":"#colors","title":"colors"},{"url":"#variables","title":"variables"}]},"parent":{"__typename":"File","relativePath":"core/theme.mdx"}}},"pageContext":{"id":"dcfb0d9a-4737-56da-ad18-dc9f07b848ef"}}