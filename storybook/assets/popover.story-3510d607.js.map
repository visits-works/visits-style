{"version":3,"file":"popover.story-3510d607.js","sources":["../../src/components/Popover/index.tsx"],"sourcesContent":["/* eslint-disable no-param-reassign, no-unused-expressions */\nimport React, {\n  Children, cloneElement, useState, HTMLAttributes, useEffect,\n  forwardRef, useImperativeHandle,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  useFloating, useInteractions, useClick,\n  shift, offset as offsetUi, flip, FloatingFocusManager, FloatingOverlay, autoUpdate,\n} from '@floating-ui/react';\nimport type { Placement } from '@floating-ui/core';\n\nimport Portal from '../Portal';\nimport Box from '../../elements/Box';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  /** ボタンの内容 */\n  label: React.ReactElement;\n  /** 内容のリスト */\n  children?: React.ReactNode;\n  /**\n   * 吹き出しの背景色\n   * @default 'background'\n   */\n  color?: string;\n  /**\n   * 表示される場所\n   * @default 'bottom-end'\n   */\n  position?: Placement;\n\n  /**\n   * ツールチップが表示される間隔\n   * @default '{ x: 0, y: 6 }'\n   */\n  offset?: { x: number; y: number; };\n\n  /** 閉じた場合のコールバック */\n  onClose?: () => void;\n  /** 開けた場合のコールバック */\n  onOpen?: () => void;\n  /** コンテンツを出さない */\n  disabled?: boolean;\n}\n\nexport interface PopoverRef {\n  open: () => void;\n  close: () => void;\n}\n\nfunction stopPropagation(e?: React.MouseEvent<Element>) {\n  if (!e) return;\n  e.stopPropagation();\n}\n\nconst Popover = forwardRef(({\n  position, label, children, color = 'background',\n  onOpen, onClose, disabled, offset = { x: 0, y: 6 },\n  ...rest\n}: Props, ref: React.Ref<PopoverRef>) => {\n  const [open, setOpen] = useState(false);\n  const { refs, floatingStyles, context } = useFloating({\n    placement: position,\n    middleware: [\n      shift(),\n      flip({ fallbackAxisSideDirection: 'end' }),\n      offsetUi({ mainAxis: offset.y, crossAxis: offset.x }),\n    ],\n    open,\n    onOpenChange: setOpen,\n    whileElementsMounted: autoUpdate,\n  });\n\n  const handleFocus = (e?: React.MouseEvent<HTMLButtonElement>) => {\n    stopPropagation(e);\n    setOpen(true);\n    if (onOpen) onOpen();\n  };\n\n  const handleBlur = (e?: React.MouseEvent<HTMLButtonElement | HTMLDivElement>) => {\n    stopPropagation(e);\n    setOpen(false);\n    if (onClose) onClose();\n  };\n\n  useEffect(() => {\n    if (disabled && open) {\n      setOpen(false);\n    }\n  }, [disabled, open]);\n\n  useImperativeHandle(ref, () => ({\n    open: handleFocus,\n    close: handleBlur,\n  }));\n\n  const { getFloatingProps, getReferenceProps } = useInteractions([\n    useClick(context, { enabled: !disabled }),\n  ]);\n\n  return (\n    <>\n      {cloneElement(Children.only(label), {\n        ref: refs.setReference,\n        ...getReferenceProps({ tabIndex: 0, role: 'button', disabled, onClick: stopPropagation }),\n      })}\n      <Portal>\n        {open ? (\n          <FloatingOverlay data-testid=\"visits-style-shadow\" onClick={handleBlur} style={{ zIndex: 9996 }}>\n            <FloatingFocusManager context={context} modal={false}>\n              <Tooltip\n                role=\"tooltip\"\n                ref={refs.setFloating}\n                color={color}\n                style={floatingStyles}\n                {...getFloatingProps({ ...rest, onClick: stopPropagation })}\n              >\n                {children}\n              </Tooltip>\n            </FloatingFocusManager>\n          </FloatingOverlay>\n        ) : null}\n      </Portal>\n    </>\n  );\n});\nPopover.displayName = 'Popover';\n\nexport default Popover;\n\nconst Tooltip = styled(Box)`\n  display: flex;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  padding: 0.5rem 0;\n  width: auto;\n  height: auto;\n  cursor: auto;\n  z-index: 20;\n`;\n"],"names":["stopPropagation","e","Popover","forwardRef","position","label","children","onOpen","onClose","disabled","rest","ref","open","setOpen","useState","refs","floatingStyles","context","offsetUi","offset","y","x","autoUpdate","handleFocus","handleBlur","useEffect","useImperativeHandle","getFloatingProps","getReferenceProps","jsxs","Fragment","cloneElement","setReference","jsx","Portal","FloatingOverlay","FloatingFocusManager","Tooltip","color","Popover$1","styled","Box"],"mappings":"snBAkDA,SAAAA,EAAAC,EAAA,CACEA,GACAA,EAAAA,gBAAAA,CACF,CAEA,MAAAC,EAAAC,EAAA,WAAA,CAAA,CAA4B,SAAAC,EAC1BA,MAAAA,EAAUC,SAAAA,EAAOC,MAAAA,EAAAA,aAAkB,OAAAC,EACnCA,QAAAA,EAAQC,SAAAA,EAASC,OAAAA,EAAAA,CAAmB,EAAA,EAAK,EAAA,CAAM,EAAE,GAAAC,CAE5C,EAAAC,IAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAM,KAAAC,EAAEA,eAAAA,EAAMC,QAAAA,CAAgBC,EAAAA,EAAAA,CAAwB,UAAAb,EACzCA,WAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAGJ,0BAAA,KAA6B,CAAA,EAAAc,GAAA,CACzB,SAAAC,EAAA,EAAmBC,UAAAA,EAAAA,CAAqBC,CAAAA,CAAAA,EAAI,KAAAT,EAEvDA,aAAAA,EACcC,qBAAAA,EACQS,CAAAA,EAGxBC,EAAAtB,GAAA,CACED,EAAAA,CAAAA,EACAa,EAAAA,EAAAA,EACAN,GAAYA,GAAO,EAGrBiB,EAAAvB,GAAA,CACED,EAAAA,CAAAA,EACAa,EAAAA,EAAAA,EACAL,GAAaA,GAAQ,EAGvBiB,EAAAA,UAAAA,IAAAA,CACEhB,GAAAG,GACEC,EAAAA,EAAAA,CACF,EAAA,CAAAJ,EAAAG,CAAA,CAAA,EAGFc,EAAAA,oBAAAA,EAAAA,KAAAA,CAAgC,KAAAH,EACxBA,MAAAA,CACCC,EAAAA,EAGT,KAAA,CAAM,iBAAAG,EAAEA,kBAAAA,CAAkBC,EAAAA,GAAAA,CAAAA,GAAAA,EAAAA,CACN,QAAA,CAAAnB,CAAYA,CAAAA,CAAAA,CAAAA,EAGhC,OAAAoB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEKC,EAAAA,aAAAA,EAAAA,SAAAA,KAAAA,CAAAA,EAAAA,CAAmC,IAAAhB,EAAA,aACxBiB,GAAAA,EAAAA,CACW,SAAA,EAAY,KAAA,SAAS,SAAAvB,EAAUA,QAAAA,CAAmBT,CAAAA,CAAiB,CAAA,EACzFiC,EAAAA,IAAAC,GAAA,CAAA,SAAAtB,EAAAqB,EAAA,IAAAE,GAAA,CAAA,cAAA,sBAAA,QAAAX,EAAA,MAAA,CAGkF,OAAA,IAAU,EAAA,SAAAS,EAAA,IAAAG,GAAA,CAAA,QAAAnB,EAAA,MAAA,GAAA,SAAAgB,MAAAI,GAAA,CAAA,KAAA,UAAA,IAAAtB,EAAA,YAAA,MAAAuB,EAAA,MAAAtB,EAAA,GAAAW,EAAA,CAO9D,GAAAjB,EAAKA,QAAAA,CAAeV,CAAAA,EAAAA,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAOnD,CAAA,CAAA,CAGN,CAAA,EACAE,EAAAA,YAAAA,UAEA,MAAAqC,EAAArC,EAEAmC,GAAAG,EAAAC,EAAA,EAAA,WAAA,CAA2B,YAAA,mBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,sHAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}