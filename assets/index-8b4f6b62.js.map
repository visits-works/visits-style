{"version":3,"file":"index-8b4f6b62.js","sources":["../../src/forms/TextInput/index.tsx"],"sourcesContent":["import React, { InputHTMLAttributes, forwardRef } from 'react';\nimport { styled, css } from 'styled-components';\n\nimport { setSize } from '../../utils';\nimport disabledColor from '../../utils/disabledColor';\nimport HelpMessage from '../HelpMessage';\nimport type { ThemeType } from '../../types';\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {\n  /**\n   * 'text' | 'number' | 'password' | 'email' | 'tel' | 'search'\n   * @default 'text'\n   */\n  type?: 'text' | 'number' | 'password' | 'email' | 'tel' | 'search';\n  /** エラーの発生時の表示テキスト */\n  error?: string;\n  /** 捕捉テキスト */\n  help?: string;\n  /** ボックス系のデザインでする */\n  outline?: boolean;\n  /** 左側のアイコン */\n  leftIcon?: React.ReactNode;\n  /** 右側のアイコン */\n  rightIcon?: React.ReactNode;\n  /** エラーが発生しても、エラーメッセージを出さないようにする */\n  noErrorMessage?: boolean;\n}\n\nconst TextInput = forwardRef<HTMLInputElement, Props>(({\n  className, outline, error, style, help, leftIcon, rightIcon, type = 'text', maxLength = 255,\n  noErrorMessage, ...rest\n}, ref) => (\n  <Wrapper\n    className={className}\n    outline={outline}\n    error={error}\n    style={style}\n    disabled={rest.disabled}\n  >\n    {leftIcon && (<Icon>{leftIcon}</Icon>)}\n    {rightIcon && (<Icon right>{rightIcon}</Icon>)}\n    <input type={type} maxLength={maxLength} ref={ref} {...rest} />\n    <HelpMessage help={help} error={error} noErrorMessage={noErrorMessage} />\n  </Wrapper>\n));\nTextInput.displayName = 'TextInput';\n\nexport default TextInput;\n\nconst rightIcon = css`\n  right: 0.375em;\n  & ~ input {\n    padding-right: 1.555em !important;\n  }\n`;\n\nconst leftIcon = css`\n  left: 0.375em;\n  & ~ input {\n    padding-left: 1.55em !important;\n  }\n`;\n\nconst Icon = styled.span<{ right?: boolean }>`\n  position: absolute;\n  top: 0.375em;\n  bottom: 0;\n  z-index: 1;\n  color: ${({ theme }) => theme.border};\n  ${({ right }) => (right ? rightIcon : leftIcon)}\n\n  svg, img {\n    height: 1em;\n    width: 1em;\n  }\n`;\n\nconst Wrapper = styled.span<{ outline?: boolean, error?: any, disabled?: boolean }>`\n  position: relative;\n  display: block;\n\n  input {\n    max-width: 100%;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: block;\n    outline: none;\n    box-shadow: none;\n    appearance: none;\n    text-align: left;\n    color: inherit;\n\n    padding: ${({ theme }) => theme.formPadding};\n    border: 1px solid ${({ error, theme }) => (error ? theme.danger : theme.border)};\n    ${({ outline, theme }) => (outline\n    ? { borderRadius: theme.radius }\n    : { borderRadius: 0, borderWidth: 0, borderBottomWidth: '1px' })}\n    ${setSize('font-size')}\n\n    transition-property: box-shadow;\n    transition-duration: 150ms;\n    transition-timing-function: ease-in-out;\n\n    &:focus {\n      border-color: ${({ error, theme }) => (error ? theme.danger : theme.primary)};\n      box-shadow: ${({ theme, outline, error }) => (outline\n    ? `0 0 0 0.1em ${(error ? theme.danger : theme.primary)}`\n    : `0 0.1em ${(error ? theme.danger : theme.primary)}`)};\n    }\n\n    &:disabled, [disabled] {\n      resize: none;\n    }\n\n    &::placeholder {\n      color: ${({ theme }) => theme.placeholder};\n    }\n  }\n\n  &:hover {\n    input:not(:disabled):not(:focus):not(:active) {\n      border-color: ${({ theme }) => theme.borderHover};\n    }\n    ${Icon} {\n      color: ${({ theme }) => theme.borderHover};\n    }\n  }\n\n  ${({ disabled, theme }) => (disabled\n    ? css`\n      input {\n        ${disabledColor(theme as ThemeType)}\n        border-style: dashed;\n      }\n    `\n    : undefined)}\n`;\n"],"names":["TextInput","forwardRef","className","outline","error","style","help","leftIcon","rightIcon","maxLength","noErrorMessage","ref","jsxs","Wrapper","rest","rightIcon2","jsx","Icon","type","HelpMessage","TextInput$1","css","styled","theme","right","setSize","disabled","disabledColor"],"mappings":"gSA4BA,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAAuD,UAAAC,EACrDA,QAAAA,EAAWC,MAAAA,EAASC,MAAAA,EAAOC,KAAAA,EAAOC,SAAAA,EAAMC,UAAAA,EAAUC,KAAAA,EAAAA,OAAkB,UAAAC,EAAA,IAAoB,eAAAC,EACxFA,GAAAA,CACF,EAAAC,IAAAC,EAAAA,KAAAC,EAAA,CAAA,UAAAX,EAAA,QAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,SAAAS,EAAA,SAAA,SAAA,CAQKP,GAAAA,EAAAA,IAAAA,EAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAA6BQ,GAAAC,EAAA,IAAAC,EAAA,CAAA,MAAA,GAAA,SAAAF,EAAA,EACQC,EAAA,IAAA,QAAA,CAAA,KAAAE,EAAA,UAAAT,EAAA,IAAAE,EAAA,GAAAG,EAAA,EACsBE,EAAAA,IAAAG,EAAA,CAAA,KAAAb,EAAA,MAAAF,EAAA,eAAAM,CAAA,CAAA,CACU,CAAA,CAAA,CAAA,EAG1EV,EAAAA,YAAAA,YAEA,MAAAoB,EAAApB,EAEAQ,EAAAa,EAAA,CAAA,4DAAA,CAAA,EAOAd,EAAAc,EAAA,CAAA,yDAAA,CAAA,EAOAJ,EAAAK,EAAA,KAAA,WAAA,CAAwB,YAAA,kBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,0DAAA,IAAA,iCAAA,EAAA,CAAA,CAKZ,MAAAC,CAAQ,IAAAA,EAAA,OAAA,CAAA,CACf,MAAAC,CAAQ,IAAAA,EAAAhB,EAAAD,CAAA,EAQbM,EAAAS,EAAA,KAAA,WAAA,CAA2B,YAAA,qBAAA,YAAA,cAAA,CAAA,EAAA,CAAA,kMAAA,qBAAA,IAAA,IAAA,yHAAA,eAAA,6DAAA,yEAAA,KAAA,UAAA,MAAA,EAAA,EAAA,CAAA,CAgBX,MAAAC,CAAQ,IAAAA,EAAA,YAAA,CAAA,CACC,MAAAnB,EAAEA,MAAAA,CAAa,IAAAA,EAAAmB,EAAA,OAAAA,EAAA,OAAA,CAAA,CACjC,QAAApB,EAAEA,MAAAA,CAAe,IAAAA,EAAA,CAClB,aAAAoB,EAAA,MAA6B,EAAA,CAC7B,aAAA,EAAgB,YAAA,EAAgB,kBAAA,KAA4B,EAAAE,EAAA,WAAA,EAAA,CAAA,CAQ3C,MAAArB,EAAEA,MAAAA,CAAa,IAAAA,EAAAmB,EAAA,OAAAA,EAAA,QAAA,CAAA,CACjB,MAAAA,EAAEA,QAAAA,EAAOpB,MAAAA,CAAe,IAAAA,EAAA,eAAAC,EAAAmB,EAAA,OAAAA,EAAA,OAAA,GAAA,WAAAnB,EAAAmB,EAAA,OAAAA,EAAA,OAAA,GAAA,CAAA,CAU7B,MAAAA,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAMD,MAAAA,CAAQ,IAAAA,EAAA,YAAAN,EAAA,CAAA,CAGf,MAAAM,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAInB,SAAAG,EAAEA,MAAAA,CAAgB,IAAAA,EAAAL,EAAA,CAAA,SAAA,wBAAA,EAAAM,EAAAJ,CAAA,CAAA,EAAA,MAAA"}