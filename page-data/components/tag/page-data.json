{"componentChunkName":"component---src-docs-tsx","path":"/components/tag","webpackCompilationHash":"f0752590c556a6ad4745","result":{"data":{"site":{"siteMetadata":{"title":"visits-style","docsLocation":"https://github.com/visits-works/visits-style/tree/develop/docs/content","description":"react style guide for VISITS Technologies"}},"mdx":{"frontmatter":{"title":"Tag","description":"タグ"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tag\",\n  \"description\": \"タグ\",\n  \"import\": \"Tag\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Imports\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import { Tag } from 'visits-style';\\n\")), mdx(\"h2\", null, \"Basic usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Tag>basic</Tag>\\n\")), mdx(\"h2\", null, \"Props\"), mdx(\"h2\", null, \"Colors\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<>\\n  <Tag color=\\\"primary\\\">primary</Tag>\\n  <Tag color=\\\"link\\\">link</Tag>\\n  <Tag color=\\\"info\\\">info</Tag>\\n  <Tag color=\\\"success\\\">success</Tag>\\n  <Tag color=\\\"warning\\\">warning</Tag>\\n  <Tag color=\\\"danger\\\">danger</Tag>\\n</>\\n\")), mdx(\"h2\", null, \"With Addons\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<>\\n  <Tag onClose={() => {}}>some tag</Tag>\\n  <Tag color=\\\"info\\\" onClose={() => {}}>some tag</Tag>\\n  <Tag color=\\\"dark\\\" addonColor=\\\"warning\\\">\\n    CSS gzip size\\n    <span>20.9 KB</span>\\n  </Tag>\\n  <Tag color=\\\"link\\\">\\n    click me\\n    <a href=\\\"#\\\">\\uD83E\\uDD14</a>\\n  </Tag>\\n</>\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"url":"#imports","title":"Imports"},{"url":"#basic-usage","title":"Basic usage"},{"url":"#props","title":"Props"},{"url":"#colors","title":"Colors"},{"url":"#with-addons","title":"With Addons"}]},"parent":{"__typename":"File","relativePath":"components/tag.mdx"}},"file":{"fields":{"component":"Tag","meta":[{"props":[{"name":"children","description":"タグの内容","required":true,"type":"any"},{"name":"onClose","description":"Xボタンの追加＋クリック時のイベントハンドラー","required":false,"type":"() => void"},{"name":"onClick","description":"クリック時のイベントハンドラー","required":false,"type":"() => void"},{"name":"color","description":"色の指定","required":false,"type":"string"},{"name":"round","description":"丸くする","required":false,"type":"boolean"}]}]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"96cd7486-dfc8-5f2f-bbe6-c86b116f6770","import":"Tag"}}}