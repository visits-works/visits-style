{"data":{"site":{"siteMetadata":{"title":"visits-style","docsLocation":"https://github.com/visits-works/visits-style/tree/develop/docs/content","description":"react style guide for VISITS Technologies"}},"mdx":{"frontmatter":{"title":"Toast","description":"通知などのためのトーストです"},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Imports`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-javascript\"\n      }\n    }, `import { Toast } from 'visits-style';\n`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Props`), React.createElement(Props, {\n      name: \"Toast\"\n    }), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Toastsの型`), React.createElement(Props, {\n      name: \"ToastItem\"\n    }), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Demo`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }\n    }, `class ToastDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { list: [], position: 'top-left' };\n\n    this.addToast = this.addToast.bind(this);\n    this.clearToast = this.clearToast.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  addToast() {\n    const colorList= ['warning', 'danger', 'info', 'primary', 'success'];\n    const list = this.state.list.slice();\n    const color = colorList[Math.floor(Math.random() * Math.floor(colorList.length))];\n    const id = '_' + Math.random().toString(36).substr(2, 9);\n    if (list.length % 2) {\n      list.push({ id: id, color: color, message: <span>{'looooooooooooooooooooooooooooooong list number: ' + list.length}</span> });\n    } else {\n      list.push({ id: id, color: color, message: 'list number: ' + list.length });\n    }\n    this.setState({ list: list });\n  }\n\n  clearToast(id) {\n    const list = this.state.list.filter(item => item.id !== id);\n    this.setState({ list: list });\n  }\n\n  clearAll() {\n    this.setState({ list: [] });\n  }\n\n  onSelect(e) {\n    this.setState({ position: e.target.value });\n  }\n\n  render() {\n    const positionList = ['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right'];\n    const { list, position } = this.state;\n    return (\n      <div>\n        <div style={{ width: '150px' }}>\n          <Select\n            name=\"position\"\n            value={position}\n            options={positionList}\n            onChange={this.onSelect}\n            outline\n          />\n        </div>\n        <br />\n        <Button color=\"info\" onClick={this.addToast}>Toast!</Button>\n        <Button color=\"danger\" onClick={this.clearAll}>Clear All</Button>\n        <Toast toasts={list} clear={this.clearToast} position={position} />\n      </div>\n    );\n  }\n}\n`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"url":"#imports","title":"Imports"},{"url":"#props","title":"Props","items":[{"url":"#toastsの型","title":"Toastsの型"}]},{"url":"#demo","title":"Demo"}]},"parent":{"__typename":"File","relativePath":"components/toast.mdx"}}},"pageContext":{"id":"db000347-ecd4-557a-8170-1a2b351d8a26"}}