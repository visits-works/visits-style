{"version":3,"file":"Textarea.story-05ffe6c6.js","sources":["../../src/forms/Textarea/index.tsx"],"sourcesContent":["import React, { TextareaHTMLAttributes, forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport boxShadow from '../../utils/boxShadow';\nimport setSize from '../../utils/setSize';\nimport disabledColor from '../../utils/disabledColor';\nimport HelpMessage from '../HelpMessage';\n\nexport interface Props extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /** エラーの発生時の表示テキスト */\n  error?: string | any;\n  /** 捕捉テキスト */\n  help?: string | any;\n  /** エラーが発生しても、エラーメッセージを出さないようにする */\n  noErrorMessage?: boolean;\n}\n\nconst Textarea = forwardRef<HTMLTextAreaElement, Props>(({\n  className, help, error, style, noErrorMessage, ...rest\n}, ref) => (\n  <Wrapper className={className} error={!!error} style={style} disabled={rest.disabled}>\n    <textarea {...rest} ref={ref} />\n    <HelpMessage help={help} error={error} noErrorMessage={noErrorMessage} />\n  </Wrapper>\n));\nTextarea.displayName = 'Textarea';\n\nexport default Textarea;\n\nconst Wrapper = styled.span<{ error?: boolean, disabled?: boolean }>`\n  display: block;\n  position: relative;\n\n  textarea {\n    max-width: 100%;\n    width: 100%;\n    height: 100%;\n    padding: 0.625em;\n    resize: vertical;\n    appearance: none;\n    overflow: auto;\n    outline: none;\n    text-align: left;\n    color: inherit;\n\n    border-radius: ${({ theme }) => theme.radius};\n    border: 1px solid ${({ theme, error }) => (error ? theme.danger : theme.border)};\n\n    transition-property: box-shadow;\n    transition-duration: 0.15s;\n    transition-timing-function: ease-in-out;\n\n    ${setSize('font-size')}\n\n    &:focus {\n      border-color: ${({ theme, error }) => (error ? theme.danger : theme.primary)};\n      ${({ theme, error }) => boxShadow('0.1em', error ? theme.danger : theme.primary)}\n    }\n\n    &:disabled, [disabled], &:readonly {\n      ${({ theme }) => disabledColor(theme)}\n    }\n\n    &:disabled, [disabled] {\n      resize: none;\n    }\n\n    &::placeholder {\n      color: ${({ theme }) => theme.placeholder};\n    }\n  }\n\n  &:hover {\n    textarea:not(:disabled):not(:focus) {\n      border-color: ${({ theme }) => theme.borderHover};\n    }\n  }\n\n${({ disabled, theme }) => (disabled\n    ? css`\n      textarea {\n        ${disabledColor(theme)}\n        border-style: dashed;\n      }\n    `\n    : undefined)}\n`;\n"],"names":["Textarea","forwardRef","className","help","error","style","noErrorMessage","ref","jsxs","Wrapper","rest","jsx","HelpMessage","Textarea$1","styled","theme","setSize","boxShadow","disabledColor","disabled","css"],"mappings":"2ZAgBA,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAAyD,UAAAC,EACvDA,KAAAA,EAAWC,MAAAA,EAAMC,MAAAA,EAAOC,eAAAA,EAAOC,GAAAA,CACjC,EAAAC,IAAAC,EAAA,KAAAC,EAAA,CAAA,UAAAP,EAAA,MAAA,CAAA,CAAAE,EAAA,MAAAC,EAAA,SAAAK,EAAA,SAAA,SAAA,CAEIC,EAAAA,IAAA,WAAA,CAAA,GAAAD,EAAA,IAAAH,CAAA,CAAA,EAA6BI,EAAAA,IAAAC,EAAA,CAAA,KAAAT,EAAA,MAAAC,EAAA,eAAAE,CAAA,CAAA,CACyC,CAAA,CAAA,CAAA,EAG1EN,EAAAA,YAAAA,WAEA,MAAAa,EAAAb,EAEAS,EAAAK,EAAA,KAAA,WAAA,CAA2B,YAAA,oBAAA,YAAA,aAAA,CAAA,EAAA,CAAA,yMAAA,qBAAA,oGAAA,yBAAA,IAAA,qCAAA,4DAAA,+DAAA,MAAA,EAAA,EAAA,CAAA,CAgBL,MAAAC,CAAQ,IAAAA,EAAA,OAAA,CAAA,CACL,MAAAA,EAAEA,MAAAA,CAAa,IAAAX,EAAAW,EAAA,OAAAA,EAAA,OAAAC,EAAA,WAAA,EAAA,CAAA,CASjB,MAAAD,EAAEA,MAAAA,CAAa,IAAAX,EAAAW,EAAA,OAAAA,EAAA,QAAA,CAAA,CAC7B,MAAAA,EAAEA,MAAAA,CAAa,IAAAE,EAAA,QAAAb,EAAAW,EAAA,OAAAA,EAAA,OAAA,EAAA,CAAA,CAIf,MAAAA,CAAQ,IAAAG,EAAAH,CAAA,EAAA,CAAA,CAQD,MAAAA,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAMD,MAAAA,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAI5B,SAAAI,EAAEA,MAAAA,CAAgB,IAAAA,EAAAC,EAAA,CAAA,YAAA,wBAAA,EAAAF,EAAAH,CAAA,CAAA,EAAA,MAAA;;;;;"}