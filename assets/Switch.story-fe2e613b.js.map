{"version":3,"file":"Switch.story-fe2e613b.js","sources":["../../src/forms/Switch/index.tsx"],"sourcesContent":["import React, { InputHTMLAttributes, forwardRef } from 'react';\nimport { styled, css } from 'styled-components';\nimport findColorInvert from '../../utils/findColorInvert';\nimport disabledColor from '../../utils/disabledColor';\nimport type { ThemeType } from '../../types';\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {\n  /** trueの場合にON/OFFのラベルを表示します */\n  showLabel?: boolean;\n  /** ONの時に、色を指定します。 */\n  background?: string;\n  /** 丸の色を設定します。 */\n  anchorColor?: string;\n  /**\n   * ONになるときのラベル\n   * @default 'ON'\n   */\n  onLabel?: string;\n  /**\n   * OFFになるときのラベル\n   * @default 'OFF'\n   */\n  offLabel?: string;\n}\n\nconst Switch = forwardRef<HTMLInputElement, Props>(({\n  className, showLabel, background, anchorColor,\n  onLabel = 'ON', offLabel = 'OFF', ...rest\n}, ref) => {\n  const id = `switch_${rest.name}`;\n  return (\n    <InputWrapper\n      className={className}\n      showLabel={showLabel}\n      background={background}\n      anchorColor={anchorColor}\n      labelTextOn={onLabel}\n      labelTextOff={offLabel}\n      disabled={rest.disabled}\n    >\n      <input id={id} type=\"checkbox\" {...rest} ref={ref} />\n      <label htmlFor={id} aria-label={id} />\n    </InputWrapper>\n  );\n});\nSwitch.displayName = 'Switch';\n\nexport default Switch;\n\nconst labelStyle = css`\n  label:before {\n    position: absolute;\n    display: block;\n    content: '${({ offLabel }: any) => offLabel}';\n    top: 0.5rem;\n    right: 0.6875rem;\n    font-size: 0.825rem;\n    line-height: 0.825rem;\n    color: ${({ theme }: any) => theme.textLight};\n  }\n\n  input:checked ~ label:before {\n    content: '${({ onLabel }: any) => onLabel}';\n    right: unset;\n    left: 0.6875rem;\n    color: ${({ theme }: any) => findColorInvert(theme, theme.primary)};\n  }\n`;\n\ninterface InputWrapperProps extends Pick<Props, 'anchorColor'|'background'|'showLabel'|'disabled'> {\n  labelTextOn: string;\n  labelTextOff: string;\n}\n\nfunction shouldForwardProp(name: string) {\n  return (\n    name !== 'labelTextOn'\n    && name !== 'labelTextOff'\n    && name !== 'anchorColor'\n    && name !== 'background'\n    && name !== 'showLabel'\n  );\n}\n\nconst InputWrapper = styled.span.withConfig({ shouldForwardProp })<InputWrapperProps>`\n  display: inline-block;\n  cursor: pointer;\n  line-height: 1.25;\n  position: relative;\n\n  input {\n    display: none;\n  }\n\n  label {\n    position: relative;\n    display: block;\n    height: 1.875rem;\n    min-width: 5rem;\n    background: transparent;\n    border: 1px solid ${({ theme }) => theme.border};\n    border-radius: 1.25rem;\n    cursor: pointer;\n    will-change: background-color;\n    transition: background-color 300ms ease;\n    box-shadow: inset 0 0.25rem 0.25rem rgba(0,0,0,0.05);\n\n    &:after {\n      position: absolute;\n      display: block;\n      left: 0.375rem;\n      top: 0.2rem;\n      width: 1.375rem;\n      height: 1.375rem;\n      border-radius: 100%;\n      background: ${({ theme, anchorColor }) => anchorColor || theme.white};\n      content: '';\n      text-align: right;\n      border: 1px solid ${({ theme }) => theme.border};\n      will-change: left;\n      transition: left 300ms ease;\n      box-shadow: 0 0 0.375rem rgba(0,0,0,0.1);\n    }\n  }\n\n  input:checked ~ label {\n    background: ${({ theme, background }) => (background || theme.primary)};\n    box-shadow: inset 0 0.25rem 0.25rem rgba(0,0,0,0.15);\n    &:after {\n      left: calc(100% - 1.75rem);\n      box-shadow: 0 0 0.375rem rgba(0,0,0,0.15);\n    }\n  }\n\n  ${({ showLabel }) => (showLabel ? labelStyle : undefined)}\n  ${({ disabled, theme }) => (disabled\n    ? css`\n      cursor: default;\n\n      label {\n        ${disabledColor(theme as ThemeType)}\n\n        &:after {\n          background: ${theme.disabled};\n        }\n      }\n\n      input:checked ~ label {\n        background: ${theme.grey};\n      }\n    `\n    : undefined)}\n`;\n"],"names":["Switch","forwardRef","className","showLabel","background","anchorColor","offLabel","rest","ref","id","jsxs","InputWrapper","onLabel","jsx","Switch$1","labelStyle","css","theme","findColorInvert","shouldForwardProp","name","styled","disabled","disabledColor"],"mappings":"yUAyBA,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAAoD,UAAAC,EAClDA,UAAAA,EAAWC,WAAAA,EAAWC,YAAAA,EAAYC,QAAAA,EAAAA,KACxB,SAAAC,EAAA,MAAiB,GAAAC,CAC7B,EAAAC,IAAA,CACE,MAAAC,EAAA,UAAAF,EAAA,IAAA,GACA,OAAAG,EAAAA,KAAAC,EAAA,CAAA,UAAAT,EAAA,UAAAC,EAAA,WAAAC,EAAA,YAAAC,EAAA,YAAAO,EAAA,aAAAN,EAAA,SAAAC,EAAA,SAAA,SAAA,CAUIM,MAAA,QAAA,CAAA,GAAAJ,EAAA,KAAA,WAAA,GAAAF,EAAA,IAAAC,EAAA,EAAkDK,EAAA,IAAA,QAAA,CAAA,QAAAJ,EAAA,aAAAA,EAAA,CACf,CAAA,CAAA,CAGzC,CAAA,EACAT,EAAAA,YAAAA,SAEA,MAAAc,EAAAd,EAEAe,EAAAC,EAAA,CAAA,yDAAA,8EAAA,2CAAA,sCAAA,IAAA,EAAA,CAAA,CAIiB,SAAAV,CAAgB,IAAAA,EAAA,CAAA,CAKnB,MAAAW,CAAa,IAAAA,EAAA,UAAA,CAAA,CAIV,QAAAL,CAAe,IAAAA,EAAA,CAAA,CAGlB,MAAAK,CAAa,IAAAC,EAAAD,EAAAA,EAAA,OAAA,CAAA,EAS3B,SAAAE,EAAAC,EAAA,CACE,OAAAA,IAAA,eAAAA,IAAA,gBAAAA,IAAA,eAAAA,IAAA,cAAAA,IAAA,WAOF,CAEA,MAAAT,EAAAU,EAAA,KAAA,WAAA,CAA4C,kBAAAF,CAAoB,CAAA,EAAA,WAAA,CAAE,YAAA,uBAAA,YAAA,aAAA,CAAA,EAAA,CAAA,2MAAA,+RAAA,iDAAA,2HAAA,qIAAA,IAAA,EAAA,EAAA,CAAA,CAgBzC,MAAAF,CAAQ,IAAAA,EAAA,OAAA,CAAA,CAeZ,MAAAA,EAAEA,YAAAA,CAAmB,IAAAZ,GAAAY,EAAA,MAAA,CAAA,CAGf,MAAAA,CAAQ,IAAAA,EAAA,OAAA,CAAA,CAQhB,MAAAA,EAAEA,WAAAA,CAAkB,IAAAb,GAAAa,EAAA,QAAA,CAAA,CAQlC,UAAAd,CAAY,IAAAA,EAAAY,EAAA,OAAA,CAAA,CACZ,SAAAO,EAAEA,MAAAA,CAAgB,IAAAA,EAAAN,EAAA,CAAA,wBAAA,uBAAA,uCAAA,IAAA,EAAAO,EAAAN,CAAA,EAAAA,EAAA,SAAAA,EAAA,IAAA,EAAA,MAAA;;;;;;;;;;;;;;;;;;;;"}