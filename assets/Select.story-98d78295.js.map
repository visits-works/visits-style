{"version":3,"file":"Select.story-98d78295.js","sources":["../../src/forms/Select/index.tsx"],"sourcesContent":["import React, { SelectHTMLAttributes, useMemo, forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport setSize from '../../utils/setSize';\nimport HelpMessage from '../HelpMessage';\nimport { SizeType } from '../../types';\nimport disabledColor from '../../utils/disabledColor';\nimport IconArrowDown from '../../elements/Icons/ArrowDown';\n\ntype ItemType =\n  | { id: string | number; name: string; [key: string]: any }\n  | string;\n\nexport interface Props extends SelectHTMLAttributes<HTMLSelectElement> {\n  placeholder?: string;\n  /** { id: string | number, name: string, ...rest } | string */\n  options: ItemType[];\n  outline?: boolean;\n  /** エラーの発生時の表示テキスト */\n  error?: string | any;\n  /** 捕捉テキスト */\n  help?: string | any;\n  /** selectのサイズ */\n  inputSize?: SizeType;\n  /** optionのカスタムrender */\n  render?: (label: string) => any;\n  /** placehoderを選択可能にする */\n  optional?: boolean;\n  /** エラーが発生しても、エラーメッセージを出さないようにする */\n  noErrorMessage?: boolean;\n}\n\nfunction Select({\n  options = [], placeholder, render, help, error, className, inputSize, outline, optional,\n  noErrorMessage, innerRef, ...rest\n}: Props & { innerRef: React.Ref<any> }) {\n  const list = useMemo(() => options.map((item) => (\n    typeof item === 'string'\n      ? (<option key={item} value={item}>{render ? render(item) : item}</option>)\n      : (<option key={item.id} value={item.id}>{render ? render(item.name) : item.name}</option>)\n  )), [options, render]);\n\n  return (\n    <InputWrapper\n      className={className}\n      inputSize={inputSize}\n      outline={outline}\n      error={!!error}\n      disabled={rest.disabled}\n    >\n      <select {...rest} ref={innerRef}>\n        {placeholder && (<option value=\"\" disabled={!optional}>{placeholder}</option>)}\n        {list}\n      </select>\n      <IconArrowDown />\n      <HelpMessage help={help} error={error} noErrorMessage={noErrorMessage} />\n    </InputWrapper>\n  );\n}\nexport default forwardRef<any, Props>((props, ref) => <Select {...props} innerRef={ref} />);\n\nconst InputWrapper = styled.span<Pick<Props, 'inputSize'|'outline'> & { error: boolean, disabled?: boolean }>`\n  position: relative;\n  display: block;\n\n  select {\n    display: block;\n    cursor: pointer;\n    appearance: none;\n    outline: none;\n    max-width: 100%;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    padding: ${({ theme }) => theme.formPadding};\n    padding-right: 1.85rem;\n    text-align: left;\n    color: inherit;\n\n    ${({ inputSize }) => setSize('font-size', inputSize)}\n\n    border: 1px solid ${({ error, theme }) => (error ? theme.danger : theme.border)};\n    ${({ outline, theme }) => (\n    outline ? css`\n        border-radius: ${theme.radius};\n      ` : css`\n        border-width: 0;\n        border-radius: 0;\n        border-bottom-width: 1px;\n      `)}\n\n    will-change: box-shadow;\n    transition-property: box-shadow;\n    transition-duration: 150ms;\n    transition-timing-function: ease-in-out;\n\n    &:hover {\n      border-color: ${({ theme }) => theme.borderHover};\n    }\n\n    &:focus {\n      border-color: ${({ error, theme }) => (error ? theme.danger : theme.primary)};\n      box-shadow: ${({ theme, outline, error }) => (outline\n    ? `0 0 0 0.1em ${(error ? theme.danger : theme.primary)}`\n    : `0 0.1em ${(error ? theme.danger : theme.primary)}`)};\n    }\n\n    &::-ms-expand {\n      display: none;\n    }\n    &:-moz-focusring {\n      color: transparent;\n      text-shadow: 0 0 0 #000;\n    }\n\n    &:invalid {\n      color: ${({ theme }) => theme.placeholder};\n    }\n  }\n\n  svg {\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.border};\n  }\n\n  select:hover + svg {\n    color: ${({ theme }) => theme.borderHover};\n  }\n\n  ${({ disabled, theme }) => (disabled ? css`\n    select {\n      ${disabledColor(theme)}\n      border-style: dashed;\n    }\n    svg {\n      display: none;\n    }\n  ` : undefined)}\n`;\n"],"names":["Select","options","placeholder","render","help","error","className","inputSize","outline","optional","noErrorMessage","innerRef","list","useMemo","item","jsx","jsxs","InputWrapper","rest","IconArrowDown","HelpMessage","forwardRef","props","ref","styled","theme","setSize","css","disabled","disabledColor"],"mappings":"2ZA+BA,SAAAA,EAAA,CAAgB,QAAAC,EAAA,CAAA,EACF,YAAAC,EAAEA,OAAAA,EAAaC,KAAAA,EAAQC,MAAAA,EAAMC,UAAAA,EAAOC,UAAAA,EAAWC,QAAAA,EAAWC,SAAAA,EAASC,eAAAA,EAC/EC,SAAAA,EAAgBC,GAAAA,CACoB,EAAA,CACpC,MAAAC,EAAAC,EAAA,QAAA,IAAAZ,EAAA,IAAAa,GAAA,OAAAA,GAAA,SAAAC,EAAAA,IAAA,SAAA,CAAA,MAAAD,EAAA,SAAAX,EAAAA,EAAAW,CAAA,EAAAA,GAAAA,CAAA,EAAAC,MAAA,SAAA,CAAA,MAAAD,EAAA,GAAA,SAAAX,EAAAA,EAAAW,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,EAAA,CAAA,EAAA,CAAAb,EAAAE,CAAA,CAAA,EAMA,OAAAa,EAAA,KAAAC,EAAA,CAAA,UAAAX,EAAA,UAAAC,EAAA,QAAAC,EAAA,MAAA,CAAA,CAAAH,EAAA,SAAAa,EAAA,SAAA,SAAA,CAQIF,EAAA,KAAA,SAAA,CAAA,GAAAE,EAAA,IAAAP,EAAA,SAAA,CACGT,GAAAA,EAAAA,IAAAA,SAAAA,CAAAA,MAAAA,GAAAA,SAAAA,CAAAA,EAAAA,SAAAA,EAAAA,EAAmEU,CACnEA,EAAAA,EACHG,EAAA,IAAAI,EAAA,EAAA,EACcJ,EAAAA,IAAAK,EAAA,CAAA,KAAAhB,EAAA,MAAAC,EAAA,eAAAK,CAAA,CAAA,CACwD,CAAA,CAAA,CAG5E,CACA,MAAAW,EAAAA,EAAAA,WAAA,CAAAC,EAAAC,IAAAR,MAAAf,EAAA,CAAA,GAAAsB,EAAA,SAAAC,CAAA,CAAA,CAAA,EAEAN,EAAAO,EAAA,KAAA,WAAA,CAAgC,YAAA,uBAAA,YAAA,aAAA,CAAA,EAAA,CAAA,+KAAA,wDAAA,qBAAA,IAAA,gJAAA,0BAAA,eAAA,4GAAA,mFAAA,8BAAA,KAAA,EAAA,EAAA,CAAA,CAahB,MAAAC,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAKjB,UAAAlB,CAAY,IAAAmB,EAAA,YAAAnB,CAAA,EAAA,CAAA,CAEM,MAAAF,EAAEA,MAAAA,CAAa,IAAAA,EAAAoB,EAAA,OAAAA,EAAA,OAAA,CAAA,CACjC,QAAAjB,EAAEA,MAAAA,CAAe,IAAAA,EAAAmB,EAAA,CAAA,iBAAA,GAAA,EAAAF,EAAA,MAAA,EAAAE,EAAA,CAAA,yDAAA,CAAA,EAAA,CAAA,CAeD,MAAAF,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAIR,MAAApB,EAAEA,MAAAA,CAAa,IAAAA,EAAAoB,EAAA,OAAAA,EAAA,QAAA,CAAA,CACjB,MAAAA,EAAEA,QAAAA,EAAOjB,MAAAA,CAAe,IAAAA,EAAA,eAAAH,EAAAoB,EAAA,OAAAA,EAAA,OAAA,GAAA,WAAApB,EAAAoB,EAAA,OAAAA,EAAA,OAAA,GAAA,CAAA,CAc7B,MAAAA,CAAQ,IAAAA,EAAA,YAAA,CAAA,CASV,MAAAA,CAAQ,IAAAA,EAAA,OAAA,CAAA,CAIR,MAAAA,CAAQ,IAAAA,EAAA,YAAA,CAAA,CAGjB,SAAAG,EAAEA,MAAAA,CAAgB,IAAAA,EAAAD,EAAA,CAAA,UAAA,0CAAA,EAAAE,EAAAJ,CAAA,CAAA,EAAA,MAAA;;;;;"}