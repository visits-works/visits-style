{"componentChunkName":"component---src-docs-tsx","path":"/components/tooltip","webpackCompilationHash":"f0752590c556a6ad4745","result":{"data":{"site":{"siteMetadata":{"title":"visits-style","docsLocation":"https://github.com/visits-works/visits-style/tree/develop/docs/content","description":"react style guide for VISITS Technologies"}},"mdx":{"frontmatter":{"title":"Tooltip","description":"吹き出し"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tooltip\",\n  \"description\": \"吹き出し\",\n  \"import\": \"Tooltip\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Imports\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import { Tooltip } from 'visits-style';\\n\")), mdx(\"h2\", null, \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<div style={{ textAlign: 'center' }}>\\n  <Tooltip label=\\\"some message\\\">\\n    <Button>Button</Button>\\n  </Tooltip>\\n  <br />\\n  <Tooltip label=\\\"some message\\\">\\n    Default\\n  </Tooltip>\\n</div>\\n\")), mdx(\"h2\", null, \"Props\"), mdx(\"h2\", null, \"Positions\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<div style={{ display: 'flex', justifyContent: 'space-between' }}>\\n  <Tooltip label=\\\"message\\\" position=\\\"right\\\">\\n    Right\\n  </Tooltip>\\n  <Tooltip label=\\\"message\\\" position=\\\"top\\\">\\n    Top\\n  </Tooltip>\\n  <Tooltip label=\\\"message\\\" position=\\\"bottom\\\">\\n    Bottom\\n  </Tooltip>\\n  <Tooltip label=\\\"message\\\" position=\\\"left\\\">\\n    Left\\n  </Tooltip>\\n</div>\\n\")), mdx(\"h2\", null, \"non-text tooltip\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<div style={{ textAlign: 'center' }}>\\n  <Tooltip position=\\\"top\\\" label={<div>tooltip with image <img src={ImgUrl} /></div>}>\\n    Non-Text\\n  </Tooltip>\\n</div>\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"url":"#imports","title":"Imports"},{"url":"#basic-usage","title":"Basic Usage"},{"url":"#props","title":"Props"},{"url":"#positions","title":"Positions"},{"url":"#non-text-tooltip","title":"non-text tooltip"}]},"parent":{"__typename":"File","relativePath":"components/tooltip.mdx"}},"file":{"fields":{"component":"Tooltip","meta":[{"props":[{"name":"label","description":"吹き出しとして表示したい内容","required":true,"type":"any"},{"name":"children","description":"マウスオーバーの対象になるelement","required":true,"type":"any"},{"name":"color","description":"吹き出しの背景色の指定","required":false,"type":"string"},{"name":"position","description":"表示される場所","required":false,"type":"\"top\" | \"left\" | \"right\" | \"bottom\""}]}]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d2346f88-713b-5c03-9598-7186ac4b2b9f","import":"Tooltip"}}}